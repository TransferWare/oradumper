This README describes how to setup the oradumper as an Oracle external procedure.

INSTALLATION
============
1) Create and install the oradumper shared library as described in the INSTALL document (../..).

2) Create a separate listener ORADUMPER_LISTENER which is run by a non-privileged user.

   See section "Modifying Configuration of External Procedures for
   Higher Security" in the Oracle document "Net Services
   Administratorâ€™s Guide".

   This is an excerpt from that section.

   a) In file listener.ora, create SID_LIST_ORADUMPER_LISTENER like this:

   SID_LIST_ORADUMPER_LISTENER =
     (SID_LIST =
       (SID_DESC =
         (SID_NAME = PLSExtProc)
         (ORACLE_HOME = <path to $OARCLE_HOME>)
         (PROGRAM = extproc)
         (ENVS = "EXTPROC_DLLS=ONLY:<path to oradumper shared library>")
       )
     )

   b) In file listener.ora, create ORADUMPER_LISTENER like this:

   ORADUMPER_LISTENER =
     (DESCRIPTION_LIST =
       (DESCRIPTION =
         (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1))
       )
     )

   c) Change the log directory path in listener.ora

   LOG_DIRECTORY_ORADUMPER_LISTENER = $HOME/network/log

   d) Remove the references to extproc in the default SID_LIST_LISTENER and LISTENER.
  
   e) Start the oradumper_listener as a non-privileged account (not oracle nor an administrator):

   $ lsnrctl start oradumper_listener &
   $ lsnrctl status oradumper_listener

4) Run admin.sql to create an Oracle library based on the shared library.

Libraries can be created by a DBA.

Please note that shared library names depend on the platform.

Some examples: 
- oradumper.dll (Windows)
- liboradumper.dylib (MAC OS X)
- liboradumper.so (Linux/ some Unixes)
- liboradumper.sl (some Unixes)

5) Run oradumper.sql as any user to create the Oracle oradumper procedure.

Please note that you must have created the oradumper_library library
or that you have execute privilege on the library.

You may also need to create a synonym.

6) Test it using test.sql.

SECURITY
========
There are several security issues related to external procedures.

The main security problem is that the Oracle listener will start the
extproc executable as the Oracle O/S account by default.  So it may be
possible to destroy database files when an Oracle account can create a
library based on the C library (libc.so on Unix).

Solutions
---------

1) Create Oracle libraries by a privileged Oracle account only, for instance a DBA.

It is not necessary to grant the CREATE LIBRARY / CREATE ANY LIBRARY to other users.
The DBA can create a library in another schema (see admin.sql).

This will make it impossible for a non-privileged Oracle account to
create libraries on his own and therefore gain access to the functions
in shared libraries.

2) Restrict the number of shared libraries which can be used for external procedures.

Put a line with ENVS like this in your listener.ora:

    (SID_DESC =
      (SID_NAME = PLSExtProc)
      (ORACLE_HOME = /Volumes/u01/app/oracle/product/10.1.0/db_1)
      (PROGRAM = extproc)
      (ENVS = "EXTPROC_DLLS=ONLY:/usr/local/lib/liboradumper.so")
    )

3) Create a separate listener for external procedures and run that listener under a restricted O/S account.

The extproc executable should NOT have the sticky bit set (on Unix).

See the Oracle listener documentation for more information about how to setup another listener.


RESOURCES
=========
A good description of how to setup Oracle external procedures can be found at:

  http://rjh.keybit.net/oracle/Chapter%2018.htm

See also the Metalink website for more information about the security issues.
